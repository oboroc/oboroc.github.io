
While all this was happening, I had a fairly generous, although limited access to PC XT clones with color EGA monitors at University.
I could use them for at least 2-3 hours every working week day.
This promoted a very cool programming and debugging technique, where I would write down the subroutines on paper and then execute it using my mind and side notes.
Because I had to keep a lot of stuff in my mind, it naturally led to habits such as writing small, single purpose functions that depended only on input parameters,
and each function would have a test mini-function that would feed it predefined input and validate output against known correct results.
Many years later I learned that what I was doing is actually [SOLID](https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)),
[functional](https://en.wikipedia.org/wiki/Functional_programming) and [TDD](https://en.wikipedia.org/wiki/Test-driven_development).

By 1993 I managed to get a part-time job as lab assistant in computer room at my University.
Money wasn't great, but I would've done it even for free.
The class I managed had about 10 gorgeous IBM PS/2 Model 50 286 10MHz PCs with 1MB RAM, 20MB HDD, clicky model M keyboards and greyscale monochrome 12" monitors.
As a very junior member of staff, I could use a really cool 386SX 16MHz PC with 2MB RAM and 100MB HDD with 13" VGA color monitor, but only after 6:00pm, after everyone else left.
Later that year I also got a paid programming gig at ASE (Academy of Economic Studies) and got access to an amazing 386 DX40 system and I think a 15" VGA monitor.
It was wonderous. I wrote some software for statistic modelling. It featured TUI user interface using Borland Turbo Vision and 640x480 16 color VGA graphics for plotting graphs.
It also allowed printing graphics out to EPSON compatible dot-matrix printers using ESC/P codes.

